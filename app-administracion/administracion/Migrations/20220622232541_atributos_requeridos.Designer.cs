// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using administracion.Persistence.Database;

#nullable disable

namespace administracion.Migrations
{
    [DbContext(typeof(AdminDBContext))]
    [Migration("20220622232541_atributos_requeridos")]
    partial class atributos_requeridos
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("administracion.Persistence.Entities.Asegurado", b =>
                {
                    b.Property<Guid>("aseguradoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("aseguradoId");

                    b.ToTable("Asegurados");

                    b.HasData(
                        new
                        {
                            aseguradoId = new Guid("0c5c3262-d5ef-46c7-bc0e-97530821c03f"),
                            apellido = "Banderas Lopez",
                            nombre = "Manuel Diego"
                        },
                        new
                        {
                            aseguradoId = new Guid("0c5c3262-d5ef-46c7-bc0e-97530821c03b"),
                            apellido = "Ramirez Gimenez",
                            nombre = "Luis Jose"
                        });
                });

            modelBuilder.Entity("administracion.Persistence.Entities.Incidente", b =>
                {
                    b.Property<Guid>("incidenteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("estadoPoliza")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("fechaFinalizado")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("fechaRegistrado")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("polizaId")
                        .HasColumnType("uuid");

                    b.HasKey("incidenteId");

                    b.HasIndex("polizaId");

                    b.ToTable("Incidentes");

                    b.HasData(
                        new
                        {
                            incidenteId = new Guid("6d285dbf-986a-4635-a622-ccdbd214fd01"),
                            estadoPoliza = 0,
                            fechaRegistrado = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            polizaId = new Guid("0c5c3262-d5ef-46c7-bc0e-97530823c05b")
                        });
                });

            modelBuilder.Entity("administracion.Persistence.Entities.Poliza", b =>
                {
                    b.Property<Guid>("polizaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("fechaRegistro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("fechaVencimiento")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("tipoPoliza")
                        .HasColumnType("integer");

                    b.Property<Guid>("vehiculoId")
                        .HasColumnType("uuid");

                    b.HasKey("polizaId");

                    b.HasIndex("vehiculoId");

                    b.ToTable("Polizas");

                    b.HasData(
                        new
                        {
                            polizaId = new Guid("0c5c3262-d5ef-46c7-bc0e-97530823c05b"),
                            fechaRegistro = new DateTime(2022, 6, 22, 19, 25, 41, 41, DateTimeKind.Local).AddTicks(5477),
                            fechaVencimiento = new DateTime(2022, 6, 22, 19, 25, 41, 41, DateTimeKind.Local).AddTicks(5478),
                            tipoPoliza = 0,
                            vehiculoId = new Guid("0c5c3262-d5ef-46c7-bc0e-97530821c04b")
                        });
                });

            modelBuilder.Entity("administracion.Persistence.Entities.Vehiculo", b =>
                {
                    b.Property<Guid>("vehiculoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("anioModelo")
                        .HasColumnType("integer");

                    b.Property<Guid?>("aseguradoId")
                        .HasColumnType("uuid");

                    b.Property<int>("color")
                        .HasColumnType("integer");

                    b.Property<DateTime>("fechaCompra")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("marca")
                        .HasColumnType("integer");

                    b.Property<string>("placa")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("character varying(7)");

                    b.HasKey("vehiculoId");

                    b.HasIndex("aseguradoId");

                    b.ToTable("Vehiculos");

                    b.HasData(
                        new
                        {
                            vehiculoId = new Guid("0c5c3262-d5ef-46c7-bc0e-97530821c04b"),
                            anioModelo = 2004,
                            aseguradoId = new Guid("0c5c3262-d5ef-46c7-bc0e-97530821c03b"),
                            color = 1,
                            fechaCompra = new DateTime(2022, 6, 22, 19, 25, 41, 41, DateTimeKind.Local).AddTicks(5462),
                            marca = 0,
                            placa = "AB320AM"
                        },
                        new
                        {
                            vehiculoId = new Guid("0c5c3262-d5ef-46c7-bc0e-97530821c05b"),
                            anioModelo = 2006,
                            aseguradoId = new Guid("0c5c3262-d5ef-46c7-bc0e-97530821c03f"),
                            color = 6,
                            fechaCompra = new DateTime(2022, 6, 22, 19, 25, 41, 41, DateTimeKind.Local).AddTicks(5474),
                            marca = 0,
                            placa = "AB322AM"
                        });
                });

            modelBuilder.Entity("administracion.Persistence.Entities.Incidente", b =>
                {
                    b.HasOne("administracion.Persistence.Entities.Poliza", "poliza")
                        .WithMany("incidente")
                        .HasForeignKey("polizaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("poliza");
                });

            modelBuilder.Entity("administracion.Persistence.Entities.Poliza", b =>
                {
                    b.HasOne("administracion.Persistence.Entities.Vehiculo", "vehiculo")
                        .WithMany("polizas")
                        .HasForeignKey("vehiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("vehiculo");
                });

            modelBuilder.Entity("administracion.Persistence.Entities.Vehiculo", b =>
                {
                    b.HasOne("administracion.Persistence.Entities.Asegurado", "asegurado")
                        .WithMany("vehiculos")
                        .HasForeignKey("aseguradoId");

                    b.Navigation("asegurado");
                });

            modelBuilder.Entity("administracion.Persistence.Entities.Asegurado", b =>
                {
                    b.Navigation("vehiculos");
                });

            modelBuilder.Entity("administracion.Persistence.Entities.Poliza", b =>
                {
                    b.Navigation("incidente");
                });

            modelBuilder.Entity("administracion.Persistence.Entities.Vehiculo", b =>
                {
                    b.Navigation("polizas");
                });
#pragma warning restore 612, 618
        }
    }
}
